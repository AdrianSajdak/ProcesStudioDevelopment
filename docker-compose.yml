services:
    redis:
        image: redis:alpine
        ports:
            - "6379:6379"
        networks:
            - backend
            - webapp
    postgres:
        image: postgres:13
        environment:
            POSTGRES_USER: ${DB_USER}
            POSTGRES_PASSWORD: ${DB_PASSWORD}
            POSTGRES_DB: ${DB_NAME}
        ports:
            - "${DB_PORT}:${DB_PORT}"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - backend
            - webapp

    backend:
        build:
            context: ./backend
            dockerfile: Dockerfile
        command: daphne -b 0.0.0.0 -p 8000 processtudio.asgi:application
        volumes:
            - ./backend:/app
        environment:
            - DJANGO_SETTINGS_MODULE=processtudio.settings
            - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
            - DEBUG=${DEBUG}
            - ALLOWED_HOSTS=${ALLOWED_HOSTS}
            - DB_NAME=${DB_NAME}
            - DB_USER=${DB_USER}
            - DB_PASSWORD=${DB_PASSWORD}
            - DB_HOST=${DB_HOST}
            - DB_PORT=${DB_PORT}
            - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS}
            - REDIS_HOST=redis://redis:6379
            - FERNET_KEY=${FERNET_KEY}
        ports:
            - "${BACKEND_PORT}:${BACKEND_PORT}"
        depends_on:
            - postgres
            - redis
        networks:
            - backend
            - webapp

    # frontend:
    #     build:
    #         context: ./frontend
    #         dockerfile: Dockerfile.prod
    #     ports:
    #         - "${FRONTEND_PORT}:80"
    #     depends_on:
    #         - backend
    #     networks:
    #         - frontend
    #         - webapp

    # LIVE RELOAD FRONTEND SERVICE
    frontend-dev:
        build:
            context: ./frontend
            dockerfile: Dockerfile
        volumes:
            - ./frontend:/app
            - /app/node_modules
        ports:
            - "3000:3000"
        environment:
            - CHOKIDAR_USEPOLLING=true
            - WATCHPACK_POLLING=true
        networks:
            - backend
            - frontend
            - webapp

    pgadmin:
        image: dpage/pgadmin4
        environment:
            PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
            PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
        volumes:
            - pgadmin_data:/var/lib/pgadmin
        ports:
            - "5050:80"
        depends_on:
            - postgres
        networks:
            - backend
            - webapp


volumes:
    postgres_data:
    pgadmin_data:

networks:
    backend:
    frontend:
    webapp: